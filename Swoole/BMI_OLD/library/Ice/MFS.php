<?php
// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `MFS.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

require_once 'Ice/BuiltinSequences.php';

global $MFS__t_GPSData;

if(!class_exists('MFS_GPSData'))
{
    class MFS_GPSData
    {
        public function __construct($gpsTime=0, $rcvTime=0, $lon=0, $lat=0, $mileage=0, $speed=0, $direct=0, $altitude=0, $battery=0, $messageType=0, $gsmStrength=0, $satelliteNum=0, $gpsAccuracyType=0, $mdtStatus=null)
        {
            $this->gpsTime = $gpsTime;
            $this->rcvTime = $rcvTime;
            $this->lon = $lon;
            $this->lat = $lat;
            $this->mileage = $mileage;
            $this->speed = $speed;
            $this->direct = $direct;
            $this->altitude = $altitude;
            $this->battery = $battery;
            $this->messageType = $messageType;
            $this->gsmStrength = $gsmStrength;
            $this->satelliteNum = $satelliteNum;
            $this->gpsAccuracyType = $gpsAccuracyType;
            $this->mdtStatus = $mdtStatus;
        }

        public function __toString()
        {
            global $MFS__t_GPSData;
            return IcePHP_stringify($this, $MFS__t_GPSData);
        }

        public $gpsTime;
        public $rcvTime;
        public $lon;
        public $lat;
        public $mileage;
        public $speed;
        public $direct;
        public $altitude;
        public $battery;
        public $messageType;
        public $gsmStrength;
        public $satelliteNum;
        public $gpsAccuracyType;
        public $mdtStatus;
    }

    $MFS__t_GPSData = IcePHP_defineStruct('::MFS::GPSData', 'MFS_GPSData', array(
        array('gpsTime', $IcePHP__t_int), 
        array('rcvTime', $IcePHP__t_int), 
        array('lon', $IcePHP__t_int), 
        array('lat', $IcePHP__t_int), 
        array('mileage', $IcePHP__t_int), 
        array('speed', $IcePHP__t_short), 
        array('direct', $IcePHP__t_short), 
        array('altitude', $IcePHP__t_short), 
        array('battery', $IcePHP__t_byte), 
        array('messageType', $IcePHP__t_byte), 
        array('gsmStrength', $IcePHP__t_byte), 
        array('satelliteNum', $IcePHP__t_byte), 
        array('gpsAccuracyType', $IcePHP__t_byte), 
        array('mdtStatus', $Ice__t_ByteSeq)));
}

global $MFS__t_GPSDataSeq;

if(!isset($MFS__t_GPSDataSeq))
{
    $MFS__t_GPSDataSeq = IcePHP_defineSequence('::MFS::GPSDataSeq', $MFS__t_GPSData);
}

global $MFS__t_GPSRecord;

if(!class_exists('MFS_GPSRecord'))
{
    class MFS_GPSRecord
    {
        public function __construct($objectId=0, $gpsData=null)
        {
            $this->objectId = $objectId;
            $this->gpsData = is_null($gpsData) ? new MFS_GPSData : $gpsData;
        }

        public function __toString()
        {
            global $MFS__t_GPSRecord;
            return IcePHP_stringify($this, $MFS__t_GPSRecord);
        }

        public $objectId;
        public $gpsData;
    }

    $MFS__t_GPSRecord = IcePHP_defineStruct('::MFS::GPSRecord', 'MFS_GPSRecord', array(
        array('objectId', $IcePHP__t_long), 
        array('gpsData', $MFS__t_GPSData)));
}

global $MFS__t_GPSRecordSeq;

if(!isset($MFS__t_GPSRecordSeq))
{
    $MFS__t_GPSRecordSeq = IcePHP_defineSequence('::MFS::GPSRecordSeq', $MFS__t_GPSRecord);
}

global $MFS__t_MFSSession;
global $MFS__t_MFSSessionPrx;

if(!interface_exists('MFS_MFSSession'))
{
    interface MFS_MFSSession extends Ice_Object
    {
        public function addRecords($gpsRecords);
        public function getRecords($objectId, $beginTime, $endTime, $gpsDatas);
    }

    class MFS_MFSSessionPrxHelper
    {
        public static function checkedCast($proxy, $facetOrCtx=null, $ctx=null)
        {
            return $proxy->ice_checkedCast('::MFS::MFSSession', $facetOrCtx, $ctx);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::MFS::MFSSession', $facet);
        }

        public static function ice_staticId()
        {
            return '::MFS::MFSSession';
        }
    }

    $MFS__t_MFSSession = IcePHP_defineClass('::MFS::MFSSession', 'MFS_MFSSession', -1, true, false, $Ice__t_Object, null, null);

    $MFS__t_MFSSessionPrx = IcePHP_defineProxy($MFS__t_MFSSession);

    IcePHP_defineOperation($MFS__t_MFSSession, 'addRecords', 0, 0, 0, array(array($MFS__t_GPSRecordSeq, false, 0)), null, array($IcePHP__t_int, false, 0), null);
    IcePHP_defineOperation($MFS__t_MFSSession, 'getRecords', 0, 0, 0, array(array($IcePHP__t_long, false, 0), array($IcePHP__t_int, false, 0), array($IcePHP__t_int, false, 0)), array(array($MFS__t_GPSDataSeq, false, 0)), array($IcePHP__t_int, false, 0), null);
}
?>
